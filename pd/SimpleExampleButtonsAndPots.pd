#N canvas 865 52 886 647 10;
#X msg -120 32 devices;
#X obj -120 78 comport 2 9600;
#X msg -120 9 open \$1;
#X msg -120 -16 9;
#X obj 355 82 key;
#X floatatom 360 119 5 0 0 0 - - -;
#X msg -6 61 49;
#X msg 40 61 50;
#X text 182 42 arduino receives characters in ascii;
#X text 188 68 dec 1 >>> 49;
#X text 198 87 dec 2 >>> 50 etc etc;
#X msg -120 51 close;
#X msg 84 61 51;
#X msg 130 61 52;
#X text -5 13 one character for each channel;
#N canvas 890 180 741 702 serial_print 0;
#X obj 57 130 inlet;
#X text 402 522 written by Alexandros Drymonitis;
#X obj 57 152 sel 10 13;
#X obj 255 122 inlet delimiter;
#X obj 443 379 outlet symbol;
#X obj 80 520 outlet list;
#N canvas 64 299 666 428 \$0-set_argument 0;
#X obj 24 7 loadbang;
#X obj 24 245 symbol \$1;
#X obj 24 269 sel tab space comma any;
#X obj 84 53 inlet;
#X obj 383 46 symbol \$2;
#X obj 24 29 t b b;
#X obj 309 204 list append;
#X msg 383 91 9;
#X msg 426 91 32;
#X obj 383 69 sel tab space comma;
#X msg 469 91 44;
#X msg 24 301 9;
#X msg 63 301 32;
#X msg 103 301 44;
#X msg 142 301 9 32 44;
#X msg 511 91 0;
#X obj 260 120 t b s;
#X obj 193 98 route bang;
#X obj 193 120 t b b;
#X text 189 138 if we provide one symbol only \, clear [list append]
first;
#X obj 309 273 outlet arg_list;
#X obj 390 248 outlet num_args;
#N canvas 675 248 518 369 drip_list 0;
#X obj 69 60 until;
#X obj 69 82 list;
#X obj 69 104 list split 1;
#X obj 69 14 inlet;
#X obj 69 126 sel 0;
#X obj 218 121 t b b;
#X obj 101 149 t b f;
#X obj 101 193 f;
#X obj 131 193 + 1;
#X obj 101 215 t f f;
#X obj 218 212 f;
#X obj 101 237 pack;
#X obj 69 36 t b l b;
#X msg 119 171 1;
#X text 59 299 force a zero as the second argument if only one symbol
is given via argument \, and exclude it from the list;
#X obj 101 259 outlet arg_list;
#X obj 218 234 outlet num_args;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 1 1;
#X connect 2 2 5 0;
#X connect 3 0 12 0;
#X connect 4 1 6 0;
#X connect 5 0 10 0;
#X connect 5 1 0 1;
#X connect 6 0 7 0;
#X connect 6 1 11 1;
#X connect 7 0 8 0;
#X connect 7 0 9 0;
#X connect 8 0 7 1;
#X connect 9 0 11 0;
#X connect 9 1 10 1;
#X connect 10 0 16 0;
#X connect 11 0 15 0;
#X connect 12 0 0 0;
#X connect 12 1 1 1;
#X connect 12 2 13 0;
#X connect 13 0 7 1;
#X restore 309 227 pd drip_list;
#N canvas 444 92 819 589 split_symbols 0;
#X obj 34 24 inlet;
#X obj 126 108 until;
#X obj 126 130 list;
#X obj 126 152 list split 1;
#X obj 126 214 sel 32;
#X obj 255 231 list prepend;
#X obj 255 253 t l l;
#X obj 126 236 t b b;
#X obj 230 276 list;
#X obj 230 391 f;
#X obj 258 391 + 1;
#X msg 245 370 0;
#X obj 126 86 t b l b b;
#X obj 230 447 pack f s;
#X obj 230 346 t b s;
#X obj 230 541 outlet;
#X obj 312 525 outlet;
#X obj 230 469 route 0 1;
#X obj 230 519 symbol;
#X obj 260 492 symbol;
#X obj 207 173 t b b b;
#X obj 312 492 spigot;
#X obj 351 470 == 0;
#X obj 230 413 t f f;
#X obj 34 69 route bang;
#X msg 34 91 97 110 121;
#X text 162 45 if we receive an empty symbol \, we'll force the list
of the symbol "any";
#X text 173 211 we use space to split the two symbols;
#X text 350 232 every time we output one symbol \, clear this list
;
#X text 365 492 if we provide one symbol only \, send a bang out this
outet;
#X text 263 151 if only one symbol is received (hence \, no space)
\, bang the right outlet of this subpatch explicitly \, so the symbol
can pass;
#X obj 34 47 moocow/any2bytes;
#X obj 230 298 moocow/bytes2any;
#X obj 230 320 symbol;
#X connect 0 0 31 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 1 2 1;
#X connect 3 2 20 0;
#X connect 4 0 7 0;
#X connect 4 1 5 0;
#X connect 5 0 6 0;
#X connect 6 0 8 1;
#X connect 6 1 5 1;
#X connect 7 0 8 0;
#X connect 7 1 5 1;
#X connect 8 0 32 0;
#X connect 9 0 10 0;
#X connect 9 0 23 0;
#X connect 10 0 9 1;
#X connect 11 0 9 1;
#X connect 12 0 1 0;
#X connect 12 1 2 1;
#X connect 12 2 11 0;
#X connect 12 3 5 1;
#X connect 13 0 17 0;
#X connect 14 0 9 0;
#X connect 14 1 13 1;
#X connect 17 0 18 0;
#X connect 17 1 19 0;
#X connect 18 0 15 0;
#X connect 19 0 16 0;
#X connect 20 0 21 0;
#X connect 20 1 8 0;
#X connect 20 2 1 1;
#X connect 21 0 16 0;
#X connect 22 0 21 1;
#X connect 23 0 13 0;
#X connect 23 1 22 0;
#X connect 24 0 25 0;
#X connect 24 1 12 0;
#X connect 25 0 12 0;
#X connect 31 0 24 0;
#X connect 32 0 33 0;
#X connect 33 0 14 0;
#X restore 84 76 pd split_symbols;
#X connect 0 0 5 0;
#X connect 1 0 2 0;
#X connect 2 0 11 0;
#X connect 2 1 12 0;
#X connect 2 2 13 0;
#X connect 2 3 14 0;
#X connect 2 4 14 0;
#X connect 3 0 23 0;
#X connect 4 0 9 0;
#X connect 5 0 1 0;
#X connect 5 1 4 0;
#X connect 6 0 22 0;
#X connect 7 0 6 1;
#X connect 8 0 6 1;
#X connect 9 0 7 0;
#X connect 9 1 8 0;
#X connect 9 2 10 0;
#X connect 9 3 15 0;
#X connect 10 0 6 1;
#X connect 11 0 6 0;
#X connect 12 0 6 0;
#X connect 13 0 6 0;
#X connect 14 0 6 0;
#X connect 15 0 6 1;
#X connect 16 0 1 0;
#X connect 16 1 4 0;
#X connect 17 0 18 0;
#X connect 17 1 16 0;
#X connect 18 0 1 0;
#X connect 18 1 6 1;
#X connect 22 0 20 0;
#X connect 22 1 21 0;
#X connect 23 0 1 1;
#X connect 23 1 17 0;
#X restore 255 144 pd \$0-set_argument;
#X text 50 30 to be used with [comport] for utilising Arduinos' Serial.print()
and Serial.println() functions;
#X obj 112 454 list;
#N canvas 293 276 836 273 delimiter 0;
#X obj 38 176 outlet bang;
#X obj 38 32 inlet;
#X obj 38 56 sel;
#X obj 56 79 sel;
#X obj 74 101 sel;
#X obj 91 39 route 1 2 3;
#X obj 305 34 swap 3;
#X obj 305 56 -;
#X obj 305 78 t f b;
#X obj 305 100 until;
#X obj 305 144 f;
#X obj 335 144 - 1;
#X msg 323 122 3;
#X obj 305 166 pack f 256;
#X text 361 61 set 256 to [sel]s that are not used (if we provide one
or two arguments \, for example) \, cause this number will never go
through [comport] (it's 8-bits plus 1);
#X obj 129 118 outlet through;
#X obj 91 17 inlet arg_list;
#X obj 305 12 inlet num_args;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 2 1 3 0;
#X connect 3 0 0 0;
#X connect 3 1 4 0;
#X connect 4 0 0 0;
#X connect 4 1 15 0;
#X connect 5 0 2 1;
#X connect 5 1 3 1;
#X connect 5 2 4 1;
#X connect 6 0 7 0;
#X connect 6 1 7 1;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 8 1 12 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 10 0 13 0;
#X connect 11 0 10 1;
#X connect 12 0 10 1;
#X connect 13 0 5 0;
#X connect 16 0 5 0;
#X connect 17 0 6 0;
#X restore 215 169 pd delimiter;
#N canvas 487 82 828 634 \$0-assemble_float 0;
#X obj 103 366 t f b;
#X obj 103 457 +;
#X obj 135 393 f;
#X obj 135 440 * 10;
#X msg 153 233 0;
#X obj 103 479 t f f;
#X obj 21 496 f;
#X obj 103 343 - 48;
#X obj 21 194 inlet get;
#X obj 206 63 inlet val;
#X obj 21 593 outlet;
#N canvas 153 192 262 222 bang_once 0;
#X obj 64 91 inlet;
#X obj 64 113 spigot;
#X obj 64 135 t b b;
#X msg 117 96 0;
#X obj 64 157 outlet;
#X obj 103 45 inlet reset;
#X msg 103 67 1;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 3 0;
#X connect 3 0 1 1;
#X connect 5 0 6 0;
#X connect 6 0 1 1;
#X restore 305 229 pd bang_once;
#X msg 433 234 0;
#X msg 305 299 1;
#X obj 21 338 spigot;
#X obj 21 216 t b b;
#N canvas 386 453 292 235 set_decimal_place 0;
#X obj 36 26 inlet;
#X obj 66 104 + 1;
#X obj 36 126 swap 10;
#X obj 36 148 pow;
#X obj 36 193 outlet;
#X obj 36 104 f;
#X obj 36 71 spigot;
#X obj 126 32 inlet;
#X obj 126 54 t f f;
#X obj 75 46 inlet;
#X obj 36 170 pow -1;
#X connect 0 0 6 0;
#X connect 1 0 5 1;
#X connect 2 0 3 0;
#X connect 2 1 3 1;
#X connect 3 0 10 0;
#X connect 5 0 1 0;
#X connect 5 0 2 0;
#X connect 6 0 5 0;
#X connect 7 0 8 0;
#X connect 8 0 6 1;
#X connect 8 1 5 0;
#X connect 9 0 6 1;
#X connect 10 0 4 0;
#X restore 282 372 pd set_decimal_place;
#X obj 259 201 t f b b;
#X msg 206 401 1;
#X msg 160 418 10;
#X obj 206 423 t f f;
#X obj 305 321 t f f;
#X obj 206 115 moses 48;
#X obj 259 137 moses 58;
#X obj 433 256 t f f;
#X obj 296 51 r \$0-symbol;
#X msg 296 73 0;
#X obj 361 282 s \$0-digits;
#X text 446 284 if digits start coming in \, close symbol's [spigot]
;
#X text 331 74 if symbols start coming in \, close [spigot] so that
the symbol can also contain digits;
#X obj 486 251 t f f;
#X msg 486 229 1;
#X obj 399 190 r \$0-delimit;
#X obj 328 490 f;
#X obj 346 467 r \$0-hyphen;
#X obj 305 265 t b b b;
#X obj 206 162 sel 46;
#X obj 328 512 sel 45;
#X msg 328 554 -1;
#X obj 399 212 t b b b b;
#X obj 206 90 spigot 1;
#X obj 21 571 * 1;
#X obj 103 389 * 1;
#X connect 0 0 42 0;
#X connect 0 1 2 0;
#X connect 1 0 5 0;
#X connect 2 0 3 0;
#X connect 3 0 1 1;
#X connect 4 0 2 1;
#X connect 5 0 6 1;
#X connect 5 1 2 1;
#X connect 6 0 41 0;
#X connect 7 0 0 0;
#X connect 8 0 15 0;
#X connect 9 0 40 0;
#X connect 11 0 35 0;
#X connect 12 0 24 0;
#X connect 13 0 21 0;
#X connect 14 0 6 0;
#X connect 15 0 14 0;
#X connect 15 1 4 0;
#X connect 16 0 42 1;
#X connect 17 0 7 0;
#X connect 17 1 16 0;
#X connect 17 2 11 0;
#X connect 18 0 20 0;
#X connect 19 0 3 1;
#X connect 20 0 3 1;
#X connect 20 1 16 1;
#X connect 21 0 14 1;
#X connect 21 1 42 1;
#X connect 22 0 36 0;
#X connect 22 1 23 0;
#X connect 23 0 17 0;
#X connect 24 0 14 1;
#X connect 24 1 16 2;
#X connect 25 0 26 0;
#X connect 26 0 40 1;
#X connect 30 0 40 1;
#X connect 30 1 33 1;
#X connect 31 0 30 0;
#X connect 32 0 39 0;
#X connect 33 0 37 0;
#X connect 34 0 33 1;
#X connect 35 0 13 0;
#X connect 35 1 33 0;
#X connect 35 2 27 0;
#X connect 36 0 18 0;
#X connect 37 0 38 0;
#X connect 37 1 41 1;
#X connect 38 0 41 1;
#X connect 39 0 11 1;
#X connect 39 1 19 0;
#X connect 39 2 12 0;
#X connect 39 3 31 0;
#X connect 40 0 22 0;
#X connect 41 0 10 0;
#X connect 42 0 1 0;
#X restore 255 364 pd \$0-assemble_float;
#N canvas 226 104 850 629 \$0-assemble_strings 0;
#X obj 231 116 inlet;
#X obj 231 313 t l l;
#X obj 231 291 list prepend;
#X obj 131 146 inlet bang;
#X obj 193 576 outlet;
#X text 28 13 upper and lower case letters \, plus underscore and hyphen
symbols go through. if some delimiters are ommited \, they will go
through too;
#X obj 131 330 list;
#X obj 23 323 inlet counter;
#X obj 23 485 pack f s;
#X obj 131 576 outlet;
#X obj 23 507 route 1 0;
#X obj 193 549 symbol;
#N canvas 153 192 262 222 bang_once 0;
#X obj 64 91 inlet;
#X obj 64 113 spigot;
#X obj 64 135 t b b;
#X msg 117 96 0;
#X obj 64 157 outlet;
#X obj 103 45 inlet reset;
#X msg 103 67 1;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 3 0;
#X connect 3 0 1 1;
#X connect 5 0 6 0;
#X connect 6 0 1 1;
#X restore 438 282 pd bang_once;
#X msg 562 309 0;
#X obj 23 576 outlet;
#X obj 231 169 moses 48;
#X obj 304 186 moses 58;
#X obj 300 77 r \$0-digits;
#X msg 300 99 0;
#X text 329 99 if numbers start coming in \, close [spigot];
#X obj 438 391 s \$0-symbol;
#X text 437 412 if symbols start coming in \, close number's [spigot]
;
#X obj 539 265 t b b b;
#X obj 300 121 t f f;
#X msg 604 282 1;
#X obj 604 364 t f f;
#X obj 539 243 r \$0-delimit;
#X obj 336 326 f;
#X obj 354 303 r \$0-hyphen;
#X obj 336 348 sel 0;
#X obj 231 265 t f b b;
#X obj 304 247 t f b;
#X obj 131 168 t b b;
#X obj 231 138 spigot 1;
#X obj 23 381 spigot 1;
#X obj 131 416 moocow/bytes2any;
#X obj 184 468 symbol;
#X obj 131 460 t b b;
#X msg 163 493 0;
#X obj 131 392 list prepend 115 121 109 98 111 108 32;
#X text 137 364 prepend the selector "symbol";
#X obj 131 438 sel bang;
#X connect 0 0 33 0;
#X connect 1 0 6 1;
#X connect 1 1 2 1;
#X connect 2 0 1 0;
#X connect 3 0 32 0;
#X connect 6 0 39 0;
#X connect 7 0 34 0;
#X connect 8 0 10 0;
#X connect 10 0 14 0;
#X connect 10 1 11 0;
#X connect 11 0 4 0;
#X connect 12 0 20 0;
#X connect 13 0 27 1;
#X connect 15 0 30 0;
#X connect 15 1 16 0;
#X connect 16 0 31 0;
#X connect 16 1 30 0;
#X connect 17 0 18 0;
#X connect 18 0 23 0;
#X connect 22 0 12 1;
#X connect 22 1 13 0;
#X connect 22 2 24 0;
#X connect 23 0 33 1;
#X connect 23 1 34 1;
#X connect 24 0 25 0;
#X connect 25 0 34 1;
#X connect 25 1 33 1;
#X connect 26 0 22 0;
#X connect 27 0 29 0;
#X connect 28 0 27 1;
#X connect 29 1 2 0;
#X connect 30 0 2 0;
#X connect 30 1 27 0;
#X connect 30 2 12 0;
#X connect 31 0 2 0;
#X connect 31 1 27 0;
#X connect 32 0 6 0;
#X connect 32 1 2 1;
#X connect 33 0 15 0;
#X connect 34 0 8 0;
#X connect 35 0 41 0;
#X connect 36 0 8 1;
#X connect 37 0 9 0;
#X connect 37 1 38 0;
#X connect 38 0 34 1;
#X connect 39 0 35 0;
#X connect 41 0 37 0;
#X connect 41 1 36 0;
#X restore 235 339 pd \$0-assemble_strings;
#N canvas 172 103 490 272 \$0-count 0;
#X obj 45 145 f;
#X obj 75 145 + 1;
#X msg 63 122 0;
#X obj 45 169 > 0;
#X obj 45 74 inlet;
#X obj 45 196 outlet;
#X obj 63 99 r \$0-done;
#X text 49 23 this is used in case a delimiter is followed by a symbol
\, so the two (or more) symbols can be diffused properly;
#X connect 0 0 1 0;
#X connect 0 0 3 0;
#X connect 1 0 0 1;
#X connect 2 0 0 1;
#X connect 3 0 5 0;
#X connect 4 0 0 0;
#X connect 6 0 2 0;
#X restore 235 312 pd \$0-count;
#X obj 215 262 t b b b b;
#X obj 215 285 s \$0-delimit;
#X obj 347 186 sel 45;
#X msg 347 208 45;
#X obj 347 230 s \$0-hyphen;
#X obj 386 286 t f f;
#X obj 57 245 t b b b;
#X obj 411 356 t b s;
#X obj 112 476 route bang;
#X obj 235 415 list prepend;
#X obj 235 437 t l l;
#X obj 316 389 r \$0-done;
#X obj 57 269 s \$0-done;
#X obj 137 431 r \$0-done;
#X obj 80 303 t b b;
#N canvas 1 82 353 268 got_bang 0;
#X obj 89 97 inlet;
#X obj 89 119 spigot;
#X obj 89 141 outlet;
#X obj 204 80 inlet;
#X msg 204 102 1;
#X obj 128 49 r \$0-done;
#X msg 128 71 0;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 3 0 4 0;
#X connect 4 0 1 1;
#X connect 5 0 6 0;
#X connect 6 0 1 1;
#X restore 80 326 pd got_bang;
#X text 50 71 space \, comma \, and tab function as delimiters by default
\, which can be set explicitly via arguments;
#X connect 0 0 2 0;
#X connect 2 0 19 0;
#X connect 2 2 9 0;
#X connect 3 0 6 0;
#X connect 6 0 9 1;
#X connect 6 1 9 2;
#X connect 8 0 21 0;
#X connect 9 0 13 0;
#X connect 9 1 15 0;
#X connect 10 0 22 0;
#X connect 11 0 22 0;
#X connect 11 1 28 1;
#X connect 11 2 20 0;
#X connect 12 0 11 0;
#X connect 13 0 14 0;
#X connect 13 1 12 0;
#X connect 13 2 10 0;
#X connect 13 3 11 1;
#X connect 15 0 16 0;
#X connect 15 1 18 0;
#X connect 16 0 17 0;
#X connect 18 0 11 2;
#X connect 18 1 10 1;
#X connect 19 0 25 0;
#X connect 19 1 27 0;
#X connect 19 2 13 0;
#X connect 20 0 22 1;
#X connect 20 1 4 0;
#X connect 21 1 5 0;
#X connect 22 0 23 0;
#X connect 23 0 8 1;
#X connect 23 1 22 1;
#X connect 24 0 22 1;
#X connect 26 0 8 1;
#X connect 27 0 28 0;
#X connect 27 1 8 0;
#X connect 28 0 5 0;
#X restore -120 102 pd serial_print;
#X floatatom -10 186 5 0 0 0 - - -;
#X floatatom 4 206 5 0 0 0 - - -;
#X floatatom 19 228 5 0 0 0 - - -;
#X floatatom 33 250 5 0 0 0 - - -;
#X floatatom 48 270 5 0 0 0 - - -;
#X floatatom 62 291 5 0 0 0 - - -;
#X floatatom 77 314 5 0 0 0 - - -;
#X floatatom 91 335 5 0 0 0 - - -;
#X text 379 178 @ ard serial.print;
#X text 397 198 seperate w " ";
#X text 431 217 last value serial.println;
#X msg -88 -16 6;
#X floatatom 106 355 5 0 0 0 - - -;
#X floatatom 120 375 5 0 0 0 - - -;
#X floatatom 135 397 5 0 0 0 - - -;
#X floatatom 149 419 5 0 0 0 - - -;
#X floatatom 164 439 5 0 0 0 - - -;
#X floatatom 178 460 5 0 0 0 - - -;
#X floatatom 193 483 5 0 0 0 - - -;
#X floatatom 207 504 5 0 0 0 - - -;
#X floatatom 221 527 5 0 0 0 - - -;
#X floatatom 236 550 5 0 0 0 - - -;
#X floatatom 250 571 5 0 0 0 - - -;
#X text -76 186 play;
#X text -61 210 listen;
#X text -48 229 listen1;
#X text -29 251 listen2;
#X text -8 272 listen3;
#X text 11 294 listen4;
#X text 22 314 load1;
#X text 41 336 load2;
#X text 62 357 load3;
#X text 81 379 load4;
#X text 83 399 loop1;
#X text 102 421 loop2;
#X text 123 442 loop3;
#X text 142 464 loop4;
#X text 122 485 tempo;
#X text 141 507 speed1;
#X text 162 528 speed2;
#X text 181 550 speed3;
#X text 197 575 speed4;
#X obj -10 119 unpack f f f f f f f f f f f f f f f f f f f f f f f
f f f f;
#X floatatom 262 182 5 0 0 0 - - -;
#X floatatom 275 206 5 0 0 0 - - -;
#X floatatom 282 232 5 0 0 0 - - -;
#X floatatom 295 256 5 0 0 0 - - -;
#X floatatom 312 282 5 0 0 0 - - -;
#X floatatom 325 306 5 0 0 0 - - -;
#X floatatom 332 332 5 0 0 0 - - -;
#X floatatom 345 356 5 0 0 0 - - -;
#X connect 0 0 1 0;
#X connect 1 0 15 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 6 0 1 0;
#X connect 7 0 1 0;
#X connect 11 0 1 0;
#X connect 12 0 1 0;
#X connect 13 0 1 0;
#X connect 15 0 58 0;
#X connect 27 0 2 0;
#X connect 58 0 16 0;
#X connect 58 1 17 0;
#X connect 58 2 18 0;
#X connect 58 3 19 0;
#X connect 58 4 20 0;
#X connect 58 5 21 0;
#X connect 58 6 22 0;
#X connect 58 7 23 0;
#X connect 58 8 28 0;
#X connect 58 9 29 0;
#X connect 58 10 30 0;
#X connect 58 11 31 0;
#X connect 58 12 32 0;
#X connect 58 13 33 0;
#X connect 58 14 34 0;
#X connect 58 15 35 0;
#X connect 58 16 36 0;
#X connect 58 17 37 0;
#X connect 58 18 38 0;
#X connect 58 19 59 0;
#X connect 58 20 60 0;
#X connect 58 21 61 0;
#X connect 58 22 62 0;
#X connect 58 23 63 0;
#X connect 58 24 64 0;
#X connect 58 25 65 0;
#X connect 58 26 66 0;
