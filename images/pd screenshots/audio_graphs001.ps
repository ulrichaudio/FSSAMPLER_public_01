%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%Title: Window .x6f29f8.c
%%CreationDate: Thu Mar 19 13:40:42 2020
%%BoundingBox: -63 288 676 504
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font DejavuSansMono
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font DejavuSansMono
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
1.001 1.001 scale
-324 -107 translate
-45 214 moveto 693 214 lineto 693 0 lineto -45 0 lineto closepath clip newpath
gsave
209 45 moveto 203 0 rlineto 0 -12 rlineto -203 0 rlineto closepath
0.988 0.988 0.988 setrgbcolor AdjustColor
fill
209 45 moveto 203 0 rlineto 0 -12 rlineto -203 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
284 44 moveto
284 33 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
209 26 moveto 203 0 rlineto 0 -12 rlineto -203 0 rlineto closepath
0.988 0.988 0.988 setrgbcolor AdjustColor
fill
209 26 moveto 203 0 rlineto 0 -12 rlineto -203 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
311 25 moveto
311 14 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
/DejavuSansMono findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
418 45 [
[(IN )]
] 11 -0.0 0.0 0 false DrawText
grestore
gsave
/DejavuSansMono findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
417 24 [
[(OUT)]
] 11 -0.0 0.0 0 false DrawText
grestore
gsave
455 45 moveto 203 0 rlineto 0 -12 rlineto -203 0 rlineto closepath
0.988 0.988 0.988 setrgbcolor AdjustColor
fill
455 45 moveto 203 0 rlineto 0 -12 rlineto -203 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
466 44 moveto
466 33 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
455 26 moveto 203 0 rlineto 0 -12 rlineto -203 0 rlineto closepath
0.988 0.988 0.988 setrgbcolor AdjustColor
fill
455 26 moveto 203 0 rlineto 0 -12 rlineto -203 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
643 25 moveto
643 14 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
/DejavuSansMono findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
664 45 [
[(IN )]
] 11 -0.0 0.0 0 false DrawText
grestore
gsave
/DejavuSansMono findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
663 24 [
[(OUT)]
] 11 -0.0 0.0 0 false DrawText
grestore
gsave
-34 45 moveto 203 0 rlineto 0 -12 rlineto -203 0 rlineto closepath
0.988 0.988 0.988 setrgbcolor AdjustColor
fill
-34 45 moveto 203 0 rlineto 0 -12 rlineto -203 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
7 44 moveto
7 33 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
-34 26 moveto 203 0 rlineto 0 -12 rlineto -203 0 rlineto closepath
0.988 0.988 0.988 setrgbcolor AdjustColor
fill
-34 26 moveto 203 0 rlineto 0 -12 rlineto -203 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
17 25 moveto
17 14 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
/DejavuSansMono findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
175 45 [
[(IN )]
] 11 -0.0 0.0 0 false DrawText
grestore
gsave
/DejavuSansMono findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
174 24 [
[(OUT)]
] 11 -0.0 0.0 0 false DrawText
grestore
gsave
-31 190 moveto
-31 50 lineto
169 50 lineto
169 190 lineto
-31 190 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.467 0.467 0.467 setrgbcolor AdjustColor
stroke
grestore
gsave
/DejavuSansMono findfont 10 scalefont ISOEncode setfont
0.467 0.467 0.467 setrgbcolor AdjustColor
-31 204 [
[(sample-table1)]
] 11 -0.0 0.0 0 false DrawText
grestore
gsave
-30 119.929504 moveto
-29 119.931641 lineto
-28 120.046997 lineto
-27 119.98291 lineto
-26 120.053406 lineto
-25 120.029907 lineto
-24 119.901733 lineto
-23 120.061951 lineto
-22 119.935913 lineto
-21 119.995728 lineto
-20 120.006409 lineto
-19 119.989319 lineto
-18 120.140991 lineto
-17 120.021362 lineto
-16 119.995728 lineto
-15 119.985046 lineto
-14 119.878235 lineto
-13 120.03418 lineto
-12 119.978638 lineto
-11 119.980774 lineto
-10 120.059814 lineto
-9 120 lineto
-8 119.908142 lineto
-7 120.029907 lineto
-6 119.90387 lineto
-5 119.98291 lineto
-4 119.950867 lineto
-3 120.083313 lineto
-2 120.027771 lineto
-1 120.032043 lineto
0 119.884644 lineto
1 119.955139 lineto
2 119.918823 lineto
3 119.914551 lineto
4 119.970093 lineto
5 120.021362 lineto
6 119.985046 lineto
7 120.160217 lineto
8 120.057678 lineto
9 119.057922 lineto
10 120.967712 lineto
11 118.656311 lineto
12 120.350342 lineto
13 120.826721 lineto
14 120.824585 lineto
15 120.444336 lineto
16 120.478516 lineto
17 120.350342 lineto
18 120.224304 lineto
19 120.175171 lineto
20 119.910278 lineto
21 120.029907 lineto
22 120.168762 lineto
23 119.914551 lineto
24 119.726562 lineto
25 120.025635 lineto
26 119.83551 lineto
27 119.690247 lineto
28 120.275574 lineto
29 120.019226 lineto
30 119.863281 lineto
31 119.959412 lineto
32 120.136719 lineto
33 120.1474 lineto
34 119.953003 lineto
35 120.010681 lineto
36 120.207214 lineto
37 120.117493 lineto
38 119.8526 lineto
39 119.957275 lineto
40 119.935913 lineto
41 119.732971 lineto
42 119.895325 lineto
43 119.848328 lineto
44 120.106812 lineto
45 120.234985 lineto
46 120.002136 lineto
47 119.871826 lineto
48 120.089722 lineto
49 120.027771 lineto
50 119.837646 lineto
51 119.929504 lineto
52 119.974365 lineto
53 119.995728 lineto
54 119.863281 lineto
55 120.198669 lineto
56 120.136719 lineto
57 119.856873 lineto
58 120.019226 lineto
59 120.202942 lineto
60 120.040588 lineto
61 119.942322 lineto
62 119.923096 lineto
63 120.068359 lineto
64 119.790649 lineto
65 119.957275 lineto
66 120.166626 lineto
67 119.914551 lineto
68 120.066223 lineto
69 119.846191 lineto
70 120.008545 lineto
71 119.81842 lineto
72 119.989319 lineto
73 120.040588 lineto
74 119.925232 lineto
75 119.820557 lineto
76 119.908142 lineto
77 119.683838 lineto
78 120.215759 lineto
79 119.720154 lineto
80 120.239258 lineto
81 119.75647 lineto
82 120.262756 lineto
83 120.410156 lineto
84 120.021362 lineto
85 120.081177 lineto
86 119.923096 lineto
87 119.953003 lineto
88 119.899597 lineto
89 120.198669 lineto
90 119.989319 lineto
91 120 lineto
92 119.794922 lineto
93 120.036316 lineto
94 120.228577 lineto
95 119.972229 lineto
96 119.861145 lineto
97 120.098267 lineto
98 120.074768 lineto
99 119.884644 lineto
100 120.004272 lineto
101 120.068359 lineto
102 119.884644 lineto
103 119.861145 lineto
104 119.888916 lineto
105 120.081177 lineto
106 120.085449 lineto
107 119.826965 lineto
108 120.038452 lineto
109 119.927368 lineto
110 120.085449 lineto
111 120.014954 lineto
112 119.805603 lineto
113 120.138855 lineto
114 119.985046 lineto
115 120.010681 lineto
116 120.081177 lineto
117 119.7052 lineto
118 120.160217 lineto
119 119.955139 lineto
120 119.942322 lineto
121 119.976501 lineto
122 120.019226 lineto
123 120.064087 lineto
124 120.405884 lineto
125 120.173035 lineto
126 120.222168 lineto
127 120.091858 lineto
128 119.683838 lineto
129 119.356995 lineto
130 120.326843 lineto
131 120.412292 lineto
132 119.624023 lineto
133 120.136719 lineto
134 120.187988 lineto
135 119.786377 lineto
136 120.422974 lineto
137 119.491577 lineto
138 120.457153 lineto
139 119.585571 lineto
140 120.029907 lineto
141 119.517212 lineto
142 118.852844 lineto
143 119.908142 lineto
144 119.760742 lineto
145 119.747925 lineto
146 120.737 lineto
147 120.106812 lineto
148 119.68811 lineto
149 120.232849 lineto
150 120.087585 lineto
151 120 lineto
152 120.049133 lineto
153 119.970093 lineto
154 119.972229 lineto
155 120.128174 lineto
156 119.989319 lineto
157 119.955139 lineto
158 120.335388 lineto
159 119.974365 lineto
160 120.040588 lineto
161 120.046997 lineto
162 120.01709 lineto
163 120.352478 lineto
164 119.995728 lineto
165 119.950867 lineto
166 119.799194 lineto
167 119.816284 lineto
168 119.794922 lineto
169 120.2948 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
210 190 moveto
210 50 lineto
410 50 lineto
410 190 lineto
210 190 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.467 0.467 0.467 setrgbcolor AdjustColor
stroke
grestore
gsave
/DejavuSansMono findfont 10 scalefont ISOEncode setfont
0.467 0.467 0.467 setrgbcolor AdjustColor
210 204 [
[(sample-table1333)]
] 11 -0.0 0.0 0 false DrawText
grestore
gsave
210 120.006409 moveto
211 119.57489 lineto
212 120.422974 lineto
213 120.999756 lineto
214 118.77594 lineto
215 119.286499 lineto
216 114.522705 lineto
217 128.547058 lineto
218 124.697571 lineto
219 112.072449 lineto
220 114.155273 lineto
221 107.255249 lineto
222 131.815491 lineto
223 124.137878 lineto
224 134.970703 lineto
225 131.520691 lineto
226 99.541321 lineto
227 112.085266 lineto
228 123.484192 lineto
229 122.099915 lineto
230 123.343201 lineto
231 128.3078 lineto
232 111.06842 lineto
233 125.690918 lineto
234 117.588196 lineto
235 108.940735 lineto
236 128.260803 lineto
237 115.80658 lineto
238 129.104614 lineto
239 123.031311 lineto
240 123.024902 lineto
241 128.369751 lineto
242 132.857971 lineto
243 118.859253 lineto
244 121.993103 lineto
245 125.819092 lineto
246 122.877502 lineto
247 126.793213 lineto
248 123.208618 lineto
249 120.05127 lineto
250 120.222168 lineto
251 118.666992 lineto
252 119.480896 lineto
253 119.950867 lineto
254 121.619263 lineto
255 118.846436 lineto
256 121.051025 lineto
257 121.580811 lineto
258 122.817688 lineto
259 118.235474 lineto
260 120.487061 lineto
261 119.794922 lineto
262 120.134583 lineto
263 119.190369 lineto
264 119.47876 lineto
265 120.625916 lineto
266 120.593872 lineto
267 119.658203 lineto
268 121.157837 lineto
269 118.656311 lineto
270 118.282471 lineto
271 120.683594 lineto
272 119.128418 lineto
273 120.78186 lineto
274 118.325195 lineto
275 120.493469 lineto
276 120.901489 lineto
277 120.192261 lineto
278 118.581543 lineto
279 121.174927 lineto
280 120.758362 lineto
281 122.971497 lineto
282 126.756897 lineto
283 127.496033 lineto
284 122.967224 lineto
285 111.38031 lineto
286 108.776245 lineto
287 136.489563 lineto
288 122.674561 lineto
289 112.382202 lineto
290 126.019897 lineto
291 130.933228 lineto
292 124.187012 lineto
293 108.699341 lineto
294 104.612732 lineto
295 108.383179 lineto
296 132.138062 lineto
297 109.543152 lineto
298 105.753479 lineto
299 126.118164 lineto
300 117.618103 lineto
301 120.410156 lineto
302 123.945618 lineto
303 122.930908 lineto
304 122.386169 lineto
305 120.553284 lineto
306 122.736511 lineto
307 118.978882 lineto
308 118.925476 lineto
309 120.709229 lineto
310 118.94043 lineto
311 120.942078 lineto
312 118.004761 lineto
313 120.863037 lineto
314 119.807739 lineto
315 118.598633 lineto
316 120.198669 lineto
317 118.592224 lineto
318 120.337524 lineto
319 121.057434 lineto
320 119.711609 lineto
321 119.213867 lineto
322 119.134827 lineto
323 118.506775 lineto
324 120.739136 lineto
325 120.158081 lineto
326 119.096375 lineto
327 119.536438 lineto
328 119.953003 lineto
329 120.717773 lineto
330 120.237122 lineto
331 120.348206 lineto
332 118.857117 lineto
333 119.931641 lineto
334 120.880127 lineto
335 119.269409 lineto
336 121.604309 lineto
337 119.752197 lineto
338 121.172791 lineto
339 118.61145 lineto
340 120.010681 lineto
341 121.300964 lineto
342 118.643494 lineto
343 119.606934 lineto
344 120.546875 lineto
345 119.933777 lineto
346 119.675293 lineto
347 119.094238 lineto
348 119.378357 lineto
349 120.224304 lineto
350 119.055786 lineto
351 118.660583 lineto
352 125.656738 lineto
353 121.115112 lineto
354 115.629272 lineto
355 114.08905 lineto
356 116.028748 lineto
357 112.352295 lineto
358 114.928589 lineto
359 120.322571 lineto
360 116.332092 lineto
361 119.057922 lineto
362 121.262512 lineto
363 127.983093 lineto
364 120.049133 lineto
365 114.708557 lineto
366 127.393494 lineto
367 123.255615 lineto
368 119.568481 lineto
369 126.571045 lineto
370 116.650391 lineto
371 109.365845 lineto
372 129.666443 lineto
373 127.626343 lineto
374 120.093994 lineto
375 126.141663 lineto
376 111.950684 lineto
377 134.654541 lineto
378 123.127441 lineto
379 120.96344 lineto
380 109.664917 lineto
381 120.046997 lineto
382 129.20929 lineto
383 109.675598 lineto
384 121.595764 lineto
385 126.754761 lineto
386 112.251892 lineto
387 123.383789 lineto
388 117.511292 lineto
389 132.731934 lineto
390 123.469238 lineto
391 119.384766 lineto
392 129.491272 lineto
393 118.374329 lineto
394 125.720825 lineto
395 118.047485 lineto
396 108.278503 lineto
397 117.402344 lineto
398 113.935242 lineto
399 108.945007 lineto
400 117.45575 lineto
401 120.314026 lineto
402 121.098022 lineto
403 109.205627 lineto
404 119.453125 lineto
405 118.912659 lineto
406 112.824402 lineto
407 122.926636 lineto
408 119.64325 lineto
409 122.860413 lineto
410 120.937805 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
458 190 moveto
458 50 lineto
658 50 lineto
658 190 lineto
458 190 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.467 0.467 0.467 setrgbcolor AdjustColor
stroke
grestore
gsave
/DejavuSansMono findfont 10 scalefont ISOEncode setfont
0.467 0.467 0.467 setrgbcolor AdjustColor
458 204 [
[(sample-table12)]
] 11 -0.0 0.0 0 false DrawText
grestore
gsave
458 120.002136 moveto
459 120.986938 lineto
460 121.852112 lineto
461 118.746033 lineto
462 117.594604 lineto
463 121.828613 lineto
464 117.515564 lineto
465 106.584473 lineto
466 109.641418 lineto
467 142.50946 lineto
468 118.543091 lineto
469 107.776489 lineto
470 130.80719 lineto
471 143.445129 lineto
472 116.043701 lineto
473 104.31366 lineto
474 121.674805 lineto
475 137.173157 lineto
476 120.042725 lineto
477 93.008728 lineto
478 124.387817 lineto
479 139.249573 lineto
480 105.106201 lineto
481 100.361633 lineto
482 130.482483 lineto
483 152.254944 lineto
484 105.738525 lineto
485 120.198669 lineto
486 136.980896 lineto
487 130.552979 lineto
488 95.860596 lineto
489 118.085938 lineto
490 141.334534 lineto
491 110.130615 lineto
492 84.476624 lineto
493 129.97406 lineto
494 154.470215 lineto
495 106.676331 lineto
496 89.330139 lineto
497 141.065369 lineto
498 150.058899 lineto
499 93.816223 lineto
500 78.232422 lineto
501 136.816406 lineto
502 135.910645 lineto
503 84.042969 lineto
504 123.375244 lineto
505 145.414734 lineto
506 139.785767 lineto
507 88.39447 lineto
508 114.576111 lineto
509 152.701416 lineto
510 130.834961 lineto
511 74.976807 lineto
512 120.837402 lineto
513 146.021423 lineto
514 99.838257 lineto
515 100.335999 lineto
516 132.221375 lineto
517 150.930481 lineto
518 109.743958 lineto
519 119.737244 lineto
520 100.838013 lineto
521 114.471436 lineto
522 111.517029 lineto
523 130.326538 lineto
524 125.878906 lineto
525 151.359863 lineto
526 144.998169 lineto
527 122.683105 lineto
528 120.044861 lineto
529 103.239136 lineto
530 93.106995 lineto
531 78.373413 lineto
532 90.925903 lineto
533 86.811523 lineto
534 132.825928 lineto
535 135.160828 lineto
536 113.181152 lineto
537 139.484558 lineto
538 145.141296 lineto
539 140.379639 lineto
540 123.215027 lineto
541 117.135315 lineto
542 110.818481 lineto
543 113.074341 lineto
544 103.115234 lineto
545 108.028564 lineto
546 104.315796 lineto
547 108.468628 lineto
548 127.229004 lineto
549 128.634644 lineto
550 116.270142 lineto
551 134.143982 lineto
552 135.899963 lineto
553 137.004395 lineto
554 142.729492 lineto
555 129.875793 lineto
556 132.520447 lineto
557 108.739929 lineto
558 109.76532 lineto
559 108.079834 lineto
560 90.846863 lineto
561 104.446106 lineto
562 106.936951 lineto
563 116.975098 lineto
564 124.61853 lineto
565 133.746643 lineto
566 141.426392 lineto
567 144.694824 lineto
568 143.000793 lineto
569 131.486511 lineto
570 111.593933 lineto
571 115.932617 lineto
572 100.36377 lineto
573 99.223022 lineto
574 97.088928 lineto
575 111.403809 lineto
576 109.577332 lineto
577 130.657654 lineto
578 132.084656 lineto
579 136.86554 lineto
580 129.54895 lineto
581 122.802734 lineto
582 119.848328 lineto
583 118.190613 lineto
584 115.710449 lineto
585 112.625732 lineto
586 115.39856 lineto
587 113.841248 lineto
588 106.962585 lineto
589 107.624817 lineto
590 134.635315 lineto
591 125.137634 lineto
592 124.009705 lineto
593 126.61377 lineto
594 133.01178 lineto
595 117.509155 lineto
596 119.28009 lineto
597 117.062683 lineto
598 114.591064 lineto
599 105.91156 lineto
600 120.040588 lineto
601 120.865173 lineto
602 114.38385 lineto
603 124.93042 lineto
604 131.029358 lineto
605 125.50293 lineto
606 120.679321 lineto
607 119.333496 lineto
608 121.271057 lineto
609 109.109497 lineto
610 120.318298 lineto
611 121.32019 lineto
612 112.328796 lineto
613 125.643921 lineto
614 130.426941 lineto
615 135.152283 lineto
616 129.32251 lineto
617 112.166443 lineto
618 119.512939 lineto
619 112.437744 lineto
620 132.039795 lineto
621 120.247803 lineto
622 116.024475 lineto
623 125.46875 lineto
624 120.200806 lineto
625 124.389954 lineto
626 106.742554 lineto
627 109.581604 lineto
628 111.568298 lineto
629 118.457642 lineto
630 120.380249 lineto
631 115.57373 lineto
632 117.325439 lineto
633 125.74646 lineto
634 131.093445 lineto
635 125.267944 lineto
636 121.40564 lineto
637 112.873535 lineto
638 117.671509 lineto
639 116.223145 lineto
640 114.834595 lineto
641 118.966064 lineto
642 118.829346 lineto
643 120.149536 lineto
644 120.935669 lineto
645 121.864929 lineto
646 119.568481 lineto
647 118.914795 lineto
648 120.341797 lineto
649 120.63446 lineto
650 115.524597 lineto
651 118.485413 lineto
652 121.164246 lineto
653 120.281982 lineto
654 118.028259 lineto
655 119.28009 lineto
656 120.168762 lineto
657 120.309753 lineto
658 121.591492 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
